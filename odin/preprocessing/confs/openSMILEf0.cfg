///////////////////////////////////////////////////////////////////////////////////////
///////// > openSMILE configuration file for speech prosody features //////////////////
/////////   pitch and loudness                                       //////////////////
/////////                                                            //////////////////
///////// (c) 2014-2016 audEERING.                                   //////////////////
/////////     All rights reserverd. See file COPYING for details.    //////////////////
///////////////////////////////////////////////////////////////////////////////////////

// === Newest version of prosody features: ===
//
// Includes viterbi-smoothed SHS pitch
// Loudness via simple auditory band model

// Supports both summarised features (over full input) with -O option (ARFF format)
// and LLDs with -lld option  (disabled by default if option is not given)

[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cWaveSource
;printLevelStats=0

;;;;;;;;;;;;;;;;;;;;;;;;;;;; Wave input ;;;;;;;;;;;;;;;;;;;;;;;;;;;
[waveIn:cWaveSource]
writer.dmLevel=wave
buffersize_sec = 10.0
filename=\cm[inputfile(I):name of input file]
start=0
end=-1
monoMixdown=1
outFieldName = pcm

;;;;;;;;;;;;;;;;;; F0, SHS, Viterbi smoothed ;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;; From 55 ms windows at 10 ms rate ;;;;;;;;;;;;;;;;;;;
[componentInstances:cComponentManager]
instance[frame].type=cFramer
instance[win].type=cWindower
instance[fft].type=cTransformFFT
instance[fftmp].type=cFFTmagphase
instance[scale].type=cSpecScale
instance[shs].type=cPitchShs
instance[pitchSmooth].type=cPitchSmootherViterbi

[frame:cFramer]
reader.dmLevel=wave
writer.dmLevel=outp
frameSize = {framesize}
frameStep = {framestep}
frameCenterSpecial = left

[win:cWindower]
reader.dmLevel=outp
writer.dmLevel=win
winFunc=gauss
gain=1.0
sigma=0.4

[fft:cTransformFFT]
reader.dmLevel=win
writer.dmLevel=fftc
zeroPadSymmetric = 0

[fftmp:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
; greater than pitch smoother max. lag
writer.levelconf.nT = 200

[scale:cSpecScale]
reader.dmLevel=fftmag
writer.levelconf.nT = 3
writer.dmLevel=hps
// nameAppend =
copyInputName = 1
processArrayFields = 0
scale=octave
sourceScale = lin
// logScaleBase = 2
// logSourceScaleBase = 2
// firstNote = 55
interpMethod = spline
minF = 25
maxF = -1
nPointsTarget = 0
specSmooth = 1
specEnhance = 1
auditoryWeighting = 1

[shs:cPitchShs]
reader.dmLevel=hps
writer.dmLevel=pitchShs
// nameAppend =
copyInputName = 1
processArrayFields = 0
maxPitch = {fmax}
minPitch = {fmin}
nCandidates = {ncandidates}
scores = 1
voicing = 1
F0C1 = 0
voicingC1 = 0
F0raw = 1
voicingClip = 0
voicingCutoff = {voicingCutoff}
greedyPeakAlgo = 1
inputFieldSearch = Mag_octScale
octaveCorrection = 0
nHarmonics = 15
compressionFactor = 0.850000
lfCut = 0

[pitchSmooth:cPitchSmootherViterbi]
reader.dmLevel=pitchShs
reader2.dmLevel=pitchShs
writer.dmLevel=pitchG60
copyInputName = 1
bufferLength=90
F0final = 1
F0finalLog = 1
F0finalEnv = 0
voicingFinalClipped = 0
voicingFinalUnclipped = 1
F0raw = 0
voicingC1 = 0
voicingClip = 0
wTvv =10.0
wTvvd= 5.0
wTvuv=10.0
wThr = 4.0
wTuu = 0.0
wLocal=2.0
wRange=1.0

;;;;;;;;;;;;;;; PITCH POST PROCCESSING
;;;;;;;;;;;;;;; AND SMOOTHING OF LLD
[componentInstances:cComponentManager]
instance[energy60].type=cEnergy
instance[volmerge].type = cValbasedSelector
instance[smoNz].type = cContourSmoother

[energy60:cEnergy]
reader.dmLevel=win
writer.dmLevel=e60
rms=1
log=0
writer.levelconf.nT=200

[volmerge:cValbasedSelector]
reader.dmLevel = e60;pitchG60
writer.dmLevel = pitch
idx=0
threshold=0.0008
removeIdx=1
zeroVec=1
outputVal=0.0

[smoNz:cContourSmoother]
reader.dmLevel = pitch
writer.dmLevel = smoNz
writer.levelconf.growDyn = 1
writer.levelconf.isRb = 0
writer.levelconf.nT = 1000
nameAppend = sma
copyInputName = 1
noPostEOIprocessing = 0
smaWin = 3
noZeroSma = 1


;;;;;;;;;;;;;;;; DATA OUTPUT ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[componentInstances:cComponentManager]
instance[lldcsvsink].type=cCsvSink
instance[f0Selector].type = cDataSelector

[f0Selector:cDataSelector]
reader.dmLevel = smoNz
writer.dmLevel = smoNzF0
copyInputName = 1
selected[0] = F0final_sma
elementMode = 1

[lldcsvsink:cCsvSink]
reader.dmLevel = smoNzF0
filename= \cm[csvoutput(O):name of output file]
append = 0
timestamp = 0
number = 0
printHeader = 0
errorOnNoOutput = 1
delimChar = ,
