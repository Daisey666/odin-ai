///////////////////////////////////////////////////////////////////////////////////////
///////// > openSMILE LSTM-RNN voice activity detector<              //////////////////
/////////                                                            //////////////////
///////// (c) audEERING UG (haftungsbeschrÃ¤nkt),                     //////////////////
/////////     All rights reserverd.                                  //////////////////
///////////////////////////////////////////////////////////////////////////////////////


;;;;;;; component list ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[componentInstances:cComponentManager]
instance[dataMemory].type = cDataMemory

[componentInstances:cComponentManager]
instance[waveSource].type = cWaveSource
instance[framerVAD].type = cFramer
instance[vectorPreemphasisVAD].type = cVectorPreemphasis
instance[windowerVAD].type = cWindower
 ; magnitude FFT spectrum
instance[fftVAD].type=cTransformFFT
instance[fftmagVAD].type=cFFTmagphase
 ; compute critical-bands from power spectrum
instance[melspecVAD].type=cMelspec
 ; compute PLP 1-12 from critical-band spectrum
instance[plpVAD].type=cPlp
 ; compute delta coefficients from PLP and energy
instance[deltaVAD].type=cDeltaRegression
 ; MVN (2x)
instance[mvnVAD].type = cVectorMVN
 ; LSTM for VAD
instance[lstmVAD].type=cRnnProcessor
instance[dataSelectorVAD].type = cDataSelector

;;;;;;;;;;;;;;;;;;;;;;;;;;;; main section ;;;;;;;;;;;;;;;;;;;;;;;;;;;
[waveSource:cWaveSource]
writer.dmLevel = wave
filename = \cm[inputfile(I):name of input file]
monoMixdown = 1
start = 0
end = -1
endrel = 0
noHeader = 0
buffersize_sec = 30

[framerVAD:cFramer]
reader.dmLevel = wave
writer.dmLevel = framesVAD
copyInputName = 1
frameMode = fixed
frameSize = {framesize}
frameStep = {framestep}
frameCenterSpecial = left
buffersize = 100000
noPostEOIprocessing = 1

[vectorPreemphasisVAD:cVectorPreemphasis]
reader.dmLevel = framesVAD
writer.dmLevel = prframesVAD
copyInputName = 1
processArrayFields = 1
k = 0.970000
de = 0

[windowerVAD:cWindower]
reader.dmLevel = prframesVAD
writer.dmLevel = winframesVAD
copyInputName = 1
processArrayFields = 1
gain = 1
offset = 0
winFunc = {window}

[fftVAD:cTransformFFT]
reader.dmLevel=winframesVAD
writer.dmLevel=fftVAD

[fftmagVAD:cFFTmagphase]
reader.dmLevel=fftVAD
writer.dmLevel=fftmagVAD

[melspecVAD:cMelspec]
reader.dmLevel=fftmagVAD
writer.dmLevel=melspec_powerVAD
; no htk compatible sample value scaling
htkcompatible = 0
nBands = 26
; use power spectrum instead of magnitude spectrum
usePower = 1
lofreq = 0
hifreq = {hifreq}
specScale = mel

[plpVAD:cPlp]
reader.dmLevel=melspec_powerVAD
writer.dmLevel=plp_VAD
buffersize=100
firstCC = 1
lpOrder = 18
cepLifter = 22
compression = 0.33
htkcompatible = 0
newRASTA = 1
RASTA = 0
rastaUpperCutoff = 29.0
rastaLowerCutoff = 0.9
doIDFT = 1
doLpToCeps = 1
doLP = 1
doInvLog = 1
doAud = 1
doLog = 1

[deltaVAD:cDeltaRegression]
reader.dmLevel=plp_VAD
writer.dmLevel=plpde_VAD
deltawin=2
blocksize=1

[mvnVAD:cVectorMVN]
reader.dmLevel = plp_VAD;plpde_VAD
writer.dmLevel = plpmvn_VAD
copyInputName = 1
processArrayFields = 0
mode = transform
initFile = {initfile}
htkcompatible = 0
meanEnable = 1
stdEnable = 1
normEnable = 0

[lstmVAD:cRnnProcessor]
reader.dmLevel = plpmvn_VAD
writer.dmLevel = vad_VAD
netfile = {netfile}

[dataSelectorVAD:cDataSelector]
reader.dmLevel = vad_VAD
writer.dmLevel = vad_VAD_voice
nameAppend = vadBin
copyInputName = 1
selectedRange = 0
elementMode = 1


//////////////////////////////////////////////////////////////////
// output vad activations
//////////////////////////////////////////////////////////////////
[componentInstances:cComponentManager]
instance[csvSink].type = cCsvSink

[csvSink:cCsvSink]
reader.dmLevel=vad_VAD_voice
filename= \cm[csvoutput(O):name of output file]
append = 0
printHeader = 0
timestamp = 1
number = 0
delimChar = ,
errorOnNoOutput = 1

